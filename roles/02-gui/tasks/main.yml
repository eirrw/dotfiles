- name: alert to skipped DE
  ansible.builtin.debug:
    msg: "DE is not being setup, one of DOT_XORG or DOT_WAYLAND must be true"
  when: not use_xorg and not use_wayland

- name: DE setup
  block:
    - name: configure Xorg environment
      block:
        - import_tasks: i3.yml
          tags: [ i3 ]

        - name: create py3status config directory
          ansible.builtin.file:
            state: directory
            name: "{{ config_dir }}/py3status"
          register: py3_config

        - name: link py3status config
          ansible.builtin.file:
            state: link
            name: "{{ py3_config.path }}/{{ item }}"
            src: "{{ files_path }}/py3status/{{ item }}"
          loop:
            - modules
            - "{{ ansible_hostname }}.conf"

        - import_tasks: "{{ playbook_dir }}/shared/install.yml"
          vars:
            packages: "{{ shared_utils + xorg_utils }}"
          tags: [ utils ]

        - import_tasks: scripts.yml
          vars:
            scripts: "{{ shared_scripts + xorg_scripts }}"
          tags: [ scripts ]
      tags: [ xorg ]
      when: use_xorg

    - name: configure Wayland environment
      block:
        - import_tasks: sway.yml
          tags: [ sway ]

        - name: create waybar config directory
          ansible.builtin.file:
            state: directory
            name: "{{ config_dir }}/waybar"
          register: wb_config

        - name: link waybar config
          ansible.builtin.file:
            state: link
            name: "{{ wb_config.path }}/config"
            src: "{{ files_path }}/waybar/{{ ansible_hostname }}"

        - name: link waybar style
          ansible.builtin.file:
            state: link
            name: "{{ wb_config.path }}/style.css"
            src: "{{ files_path }}/waybar/{{ ansible_hostname }}.css"

        - import_tasks: scripts.yml
          vars:
            scripts: "{{ shared_scripts + wayland_scripts }}"
          tags: [ scripts ]

        - import_tasks: "{{ playbook_dir }}/shared/install.yml"
          vars:
            packages: "{{ shared_utils + wayland_utils }}"
          tags: [ utils ]
      tags: [ wayland ]
      when: use_wayland

    - name: install and configure rofi
      block:
        - name: create rofi config directory
          ansible.builtin.file:
            state: directory
            name: "{{ config_dir }}/rofi"
          register: rofi_config

        - name: link rofi config
          ansible.builtin.file:
            state: link
            name: "{{ rofi_config.path }}/{{ item }}"
            src: "{{ files_path }}/rofi/{{ item }}"
          loop:
            - launcher.rasi
            - switcher.rasi

        - name: install
          import_tasks: "{{ playbook_dir }}/shared/install.yml"
          vars:
            erase: True
            packages:
              - "{{ 'rofi-wayland' if use_wayland else 'rofi' }}"
      tags: [ rofi ]
  when: use_xorg or use_wayland
  tags: [ de ]

- name: install and configure kitty
  block:
    - name: create kitty config dir
      ansible.builtin.file:
        state: directory
        path: "{{ config_dir }}/kitty"
      register: kitty_conf

    - name: link kitty config
      ansible.builtin.file:
        state: link
        name: "{{ kitty_conf.path }}/kitty.conf"
        src: "{{ files_path }}/kitty/kitty.conf"

    - name: install kitty
      import_tasks: "{{ playbook_dir }}/shared/install.yml"
      vars:
        packages:
          - kitty
  tags: [ kitty ]

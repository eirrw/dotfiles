- name: alert to skipped DE
  ansible.builtin.debug:
    msg: "DE is not being setup, env var DOT_DESKTOP must be set"
  when: not setup_de

- name: DE setup
  block:
    - name: configure desktop environment
      block:
        - import_tasks: sway.yml
          tags: [ sway ]

        - name: create waybar config directory
          ansible.builtin.file:
            state: directory
            name: "{{ config_dir }}/waybar"
          register: wb_config

        - name: setup waybar config
          import_tasks: "{{ playbook_dir }}/shared/copy.yml"
          vars:
            dest: "{{ wb_config.path }}/config"
            src: "{{ files_path }}/waybar/{{ ansible_hostname }}"

        - name: setup waybar style
          import_tasks: "{{ playbook_dir }}/shared/copy.yml"
          vars:
            dest: "{{ wb_config.path }}/style.css"
            src: "{{ files_path }}/waybar/{{ ansible_hostname }}.css"

        - import_tasks: scripts.yml
          vars:
            scripts: "{{ de_scripts }}"
          tags: [ scripts ]

        - import_tasks: "{{ playbook_dir }}/shared/install.yml"
          vars:
            packages: "{{ de_utils }}"
          tags: [ utils ]
      tags: [ wayland ]
      when: setup_de

    - name: install and configure rofi
      block:
        - name: create rofi config directory
          ansible.builtin.file:
            state: directory
            name: "{{ config_dir }}/rofi"
          register: rofi_config

        - name: setup rofi config
          import_tasks: "{{ playbook_dir }}/shared/copy.yml"
          vars:
            dest: "{{ rofi_config.path }}/{{ item }}"
            src: "{{ files_path }}/rofi/{{ item }}"
            loop:
              - launcher.rasi
              - switcher.rasi

        - name: install
          import_tasks: "{{ playbook_dir }}/shared/install.yml"
          vars:
            erase: True
            packages:
              - rofi-wayland
      tags: [ rofi ]
  when: setup_de
  tags: [ de ]

- name: download and install fonts
  include_tasks: 
    file: fonts.yml
    apply:
      tags: [ fonts ]
  loop: "{{ fonts }}"
  loop_control:
    loop_var: font
  tags: [ fonts ]

- name: install and configure kitty
  block:
    - name: create kitty config dir
      ansible.builtin.file:
        state: directory
        path: "{{ config_dir }}/kitty"
      register: kitty_conf

    - name: setup kitty config
      import_tasks: "{{ playbook_dir }}/shared/copy.yml"
      vars:
        dest: "{{ kitty_conf.path }}/kitty.conf"
        src: "{{ files_path }}/kitty/kitty.conf"

    - name: install kitty
      import_tasks: "{{ playbook_dir }}/shared/install.yml"
      vars:
        packages:
          - kitty
  tags: [ kitty ]
